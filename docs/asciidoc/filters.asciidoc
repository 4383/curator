[[filters]]
= Filters

[partintro]
--

Filters are the way to select only the indices (or snapshots) you want.

The index filtertypes are:

* <<filtertype_age,age>>
* <<filtertype_pattern,pattern>>
* <<filtertype_space,space>>
* <<filtertype_kibana,kibana>>
* <<filtertype_forcemerged,forcemerged>>
* <<filtertype_closed,closed>>
* <<filtertype_opened,opened>>
* <<filtertype_allocated,allocated>>

The snapshot filtertypes are:

* <<filtertype_age,age>>
* <<filtertype_pattern,pattern>>

--

[[filtertype]]
== filtertype

Each filter is defined first by a `filtertype`.  Each filtertype has its own
settings, or no settings at all.  In a configuration file, filters are defined
as follows:

[source,text]
-------------
- filtertype: *first*
  setting1: ...
  ...
  settingN: ...
- filtertype: *second*
  setting1: ...
  ...
  settingN: ...
- filtertype: *third*
-------------

The `-` indicates in the YAML that this is an array element.  Each filtertype
declaration must be preceded by a `-` for the filters to be read properly.  This
is how Curator can chain filters together.  Anywhere filters can be used,
multiple can be chained together in this manner.

The index filtertypes are:

* <<filtertype_age,age>>
* <<filtertype_pattern,pattern>>
* <<filtertype_space,space>>
* <<filtertype_kibana,kibana>>
* <<filtertype_forcemerged,forcemerged>>
* <<filtertype_closed,closed>>
* <<filtertype_opened,opened>>
* <<filtertype_allocated,allocated>>

The snapshot filtertypes are:

* <<filtertype_age,age>>
* <<filtertype_pattern,pattern>>


[[filtertype_allocated]]
== allocated

[source,text]
-------------
- filtertype: allocated
  key:
  value:
  allocation_type:
-------------

NOTE: Empty values and commented lines will result in the default value, if any,
    being selected.  If a setting is set, but not used by a given
    <<filtertype,filtertype>>, it will be ignored.

This <<filtertype,filtertype>> will remove from the list any indices which
match the given shard routing allocation options.

[float]
Required settings
~~~~~~~~~~~~~~~~~

* <<option_key,key>> (required)
* <<option_value,value>> (required)

[float]
Optional settings
~~~~~~~~~~~~~~~~~
* <<option_allocation_type,allocation_type>> (has a default value which can optionally be changed)



[[filtertype_age]]
== age

[source,text]
-------------
 - filtertype: age
   source: name
   direction: older
   timestring: '%Y.%m.%d'
   unit: days
   unit_count: 3
   field
   stats_result:
   epoch:
-------------

NOTE: Empty values and commented lines will result in the default value, if any,
    being selected.  If a setting is set, but not used by a given
    <<filtertype,filtertype>>, it will be ignored.

This <<filtertype,filtertype>> allows you to filter indices and snapshots by
their age.

Read more about the different settings for this <<filtertype,filtertype>>:

[float]
Required settings
~~~~~~~~~~~~~~~~~

* <<fe_source,source>> (required)
* <<fe_direction,direction>> (required)
* <<fe_unit,unit>> (required)
* <<fe_unit_count,unit_count>> (required)

[float]
Dependent settings
~~~~~~~~~~~~~~~~~~

* <<fe_timestring,timestring>> (required if `source` is `name`)
* <<fe_field,field>> (required if `source` is `field_stats`) [Indices only]
* <<fe_stats_result,stats_result>> (only used if `source` is `field_stats`) [Indices only]

[float]
Optional settings
~~~~~~~~~~~~~~~~~

* <<fe_epoch,epoch>> (optional)


[[filtertype_closed]]
== closed

[source,text]
-------------
- filtertype: closed
-------------

This <<filtertype,filtertype>> will remove from the list any indices which are
closed.

There are no settings for this <<filtertype,filtertype>>.

[[filtertype_forcemerged]]
== forcemerged

[source,text]
-------------
- filtertype: forcemerged
  max_num_segments: 2
-------------

NOTE: Empty values and commented lines will result in the default value, if any,
    being selected.  If a setting is set, but not used by a given
    <<filtertype,filtertype>>, it will be ignored.

This <<filtertype,filtertype>> will remove from the list any indices which have
`max_num_segments` segments per shard, or fewer.

[float]
Required settings
~~~~~~~~~~~~~~~~~

* <<option_mns,max_num_segments>> (required)



[[filtertype_kibana]]
== kibana

[source,text]
-------------
- filtertype: kibana
-------------

This <<filtertype,filtertype>> will remove indices `.kibana`, `.marvel-kibana`,
`kibana-int`, and `.marvel-es-data` from the list of indices, if present.

There are no settings for this <<filtertype,filtertype>>.


[[filtertype_none]]
== none

[source,text]
-------------
- filtertype: none
-------------

This <<filtertype,filtertype>> will not filter anything, returning the full
list of indices or snapshots.

There are no settings for this <<filtertype,filtertype>>.


[[filtertype_opened]]
== opened

[source,text]
-------------
- filtertype: opened
-------------

This <<filtertype,filtertype>> will remove from the list any indices which are
opened.

There are no settings for this <<filtertype,filtertype>>.




[[filtertype_pattern]]
== pattern

[source,text]
-------------
- filtertype: pattern
 kind: prefix
 value: logstash-
 exclude: False
-------------

NOTE: Empty values and commented lines will result in the default value, if any,
    being selected.  If a setting is set, but not used by a given
    <<filtertype,filtertype>>, it will be ignored.

This <<filtertype,filtertype>> allows you to filter indices and snapshots by
patterns in the index or snapshot name.

Read more about the different settings for this <<filtertype,filtertype>>:

[float]
Required settings
~~~~~~~~~~~~~~~~~

* <<fe_kind,kind>> (required)
* <<fe_value,value>> (required)

[float]
Optional settings
~~~~~~~~~~~~~~~~~

* <<fe_exclude,exclude>> (optional)



[[filtertype_space]]
== space

[source,text]
-------------
- filtertype: space
  disk_space: 100
  reverse: True
  use_age: False
  source: creation_date
  timestring:
  field:
  stats_result:
-------------

NOTE: Empty values and commented lines will result in the default value, if any,
    being selected.  If a setting is set, but not used by a given
    <<filtertype,filtertype>>, it will be ignored.

[float]
Deleting Indices By Space
~~~~~~~~~~~~~~~~~~~~~~~~~

This <<filtertype,filtertype>> is for those who want to retain indices based on
disk consumption, rather than by a set number of days. There are some important
caveats regarding this choice:

* Elasticsearch cannot calculate the size of closed indices. Elasticsearch does
  not keep tabs on how much disk-space closed indices consume. If you close
  indices, your space calculations will be inaccurate.
* Indices consume resources just by existing. You could run into performance
  and/or operational snags in Elasticsearch as the count of indices climbs.
* You need to manually calculate how much space across all nodes. The total you
  give will be the sum of all space consumed across all nodes in your cluster.
  If you use shard allocation to put more shards or indices on a single node, it
  will not affect the total space reported by the cluster, but you may still run
  out of space on that node.

These are only a few of the caveats. This is still a valid use-case, especially
for those running a single-node test box.

Read more about the different settings for this <<filtertype,filtertype>>:

[float]
Required settings
~~~~~~~~~~~~~~~~~

* <<fe_disk_space,disk_space>> (required)

[float]
Optional settings
~~~~~~~~~~~~~~~~~

* <<fe_reverse,reverse>> (optional)
* <<fe_use_age,use_age>> (optional)
* <<fe_source,source>> (required if `use_age` is `True`)
* <<fe_direction,direction>> (required if `use_age` is `True`)
* <<fe_unit,unit>> (required if `use_age` is `True`)
* <<fe_unit_count,unit_count>> (required if `use_age` is `True`)
* <<fe_timestring,timestring>> (required if `source` is `name`)
* <<fe_field,field>> (required if `source` is `field_stats`)
* <<fe_stats_result,stats_result>> (only used if `source` is `field_stats`)
